---
version: 2
jobs:
  nodejsdeps:
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-nodejs-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Install nodejs dependencies
          command: npm install
      - save_cache:
          key: v1-nodejs-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  rubydeps:
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment
      - save_cache:
          key: v1-ruby-deps-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  build:
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment
      - run:
          name: Build site
          command: bundle exec jekyll build
      - save_cache:
          key: v1-site-build-{{ .Revision }}
          paths:
            - _site

  test:
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment
      - run: bundle exec jekyll test


  markdownlint:
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:
      - checkout
      - run:
          name: "Install javascript dependencies"
          command: npm install
      - run:
          name: markdown lint
          command: npm run test-markdown

  yamllint:
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run:
          name: Install yamllint
          command: sudo pip install --upgrade yamllint
      - run:
          name: Yaml linter
          command: yamllint .

  accessibility:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-site-build-{{ .Revision }}
            - v1-nodejs-deps-{{ checksum "package-lock.json" }}
      - run:
          name: "Install javascript dependencies"
          command: npm install
      - run: npm run test-accessibility
  percy:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-site-build-{{ .Revision }}
            - v1-nodejs-deps-{{ checksum "package-lock.json" }}
      - run:
          name: "Install javascript dependencies"
          command: npm install
      - run:
          name: Visual Tests
          command: npm run percy
  deploy:
    docker:
      - image: circleci/ruby:2.6.3-node
    environment:
      DIST_FOLDER: '_site'
      PUBLISH_BRANCH: 'master'
      REMOTE: origin
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
            - v1-site-build-{{ .Revision }}
      - run:
          name: Install dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment
      - run:
          name: "Install javascript dependencies"
          command: npm install
      - add_ssh_keys:
          fingerprints:
            - "eb:35:35:3f:6f:f5:45:2e:e3:16:15:33:02:02:81:ea"
      - run:
          name: Building static site
          command: bundle exec jekyll build
      - run:
          name: Make a copy of the build
          command: cp -r ./_site ../
      - run:
          name: Install rsync from apt
          command: sudo apt install rsync
      - run:
          name: Configure git
          command: |
            git config --global user.email "labplus@dia.govt.nz"
            git config --global user.name "Deployment step on circle-ci"
      - run:
          name: Create release branch
          command: |
            git checkout ${PUBLISH_BRANCH}
      - run:
          name: "Copy build into our working folder"
          command: |
            rsync -a ../_site/ .
            git diff | cat
      - run:
          name: "Add modified files to git"
          command: git add . && git commit -m "Build $CIRCLE_BUILD_NUM"
      - run:
          name: "Push release tag"
          command: |
            set -euv
            export RELEASE_TAG="release-${CIRCLE_BUILD_NUM}"
            git tag "${RELEASE_TAG}"
            git push "${REMOTE}" "${RELEASE_TAG}"
      - run:
          name: Push to remote (make live)
          command: |
            git push "${REMOTE}" "${PUBLISH_BRANCH}"
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - nodejsdeps
      - rubydeps
      - yamllint
      - build:
          requires:
            - rubydeps
          filters:
            branches:
              ignore:
                - master
                - gh-pages
      - markdownlint:
          requires:
            - nodejsdeps
      - accessibility:
          requires:
            - build
            - nodejsdeps
      - percy:
          requires:
            - build
            - nodejsdeps
      - test:
          requires:
            - rubydeps
      - deploy:
          requires:
            - rubydeps
            - build
            - test
          filters:
            branches:
              only:
                - dev
